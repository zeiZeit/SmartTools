apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        consumerProguardFiles 'consumer-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
                /*
                Room 具有以下注释处理器选项：
                room.schemaLocation：配置并启用将数据库架构导出到给定目录中的 JSON 文件的功能。
                                    [创建好表和数据库后编译，会在 app/schemas 目录下生成这个 JSON 文件]
                room.incremental：启用 Gradle 增量注释处理器。
                room.expandProjection：配置 Room 以重写查询，使其顶部星形投影在展开后仅包含 DAO 方法返回类型中定义的列。
                */
            }
        }
    }
    sourceSets {
        main {
//            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
            } else {
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //统一资源前缀,规范资源引用
    resourcePrefix "common_"

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {
    api project(':library-base')
    api project(':library-network')
    api project(':library-servicemanager')
    api 'com.scwang.smart:refresh-layout-kernel:2.0.0-alpha-1'
    api 'com.scwang.smart:refresh-header-classics:2.0.0-alpha-1'
    api 'com.scwang.smart:refresh-footer-classics:2.0.0-alpha-1'
    api rootProject.ext.dependencies["arouter-api"]
    api 'com.orhanobut:logger:2.2.0'
    api 'org.jetbrains:annotations:15.0'
    api 'com.blankj:utilcodex:1.26.0'
    //banner
    api 'com.github.zhpanvip:BannerViewPager:2.6.6'
    api 'com.github.zhpanvip:viewpagerindicator:1.0.0'
    // 圆角控件
    api 'com.github.AnJiaoDe:AndroidNecessaryView:V1.0.1'

    // room
    def room_version = "2.2.5"
    api "androidx.room:room-runtime:$room_version"
    // room 配合 RxJava
    api "androidx.room:room-rxjava2:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"


}
